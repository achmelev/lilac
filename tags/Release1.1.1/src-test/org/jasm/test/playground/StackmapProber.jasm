public super class {
  version 50.0;
  name StackmapProber; // org/jasm/test/playground/StackmapProber
  extends Object; // java/lang/Object
  implements Prober; // org/jasm/test/playground/Prober
   //Constants
  const classref StackmapProber StackmapProber_name; // org/jasm/test/playground/StackmapProber
  const utf8 StackmapProber_name "org/jasm/test/playground/StackmapProber";
  const classref Object Object_name; // java/lang/Object
  const utf8 Object_name "java/lang/Object";
  const classref Prober Prober_name; // org/jasm/test/playground/Prober
  const utf8 Prober_name "org/jasm/test/playground/Prober";
  const utf8 init0_name "<init>";
  const utf8 init0_desc "()V";
  const utf8 Code_utf8 "Code";
  const methodref init0 Object, init0_nat; // class=java/lang/Object, name=<init>, descriptor=()V
  const nameandtype init0_nat init0_name, init0_desc; // name=<init> type=()V
  const utf8 LineNumberTable_utf8 "LineNumberTable";
  const utf8 LocalVariableTable_utf8 "LocalVariableTable";
  const utf8 this_name "this";
  const utf8 this_desc "Lorg/jasm/test/playground/StackmapProber;";
  const utf8 check_name "check";
  const utf8 check_desc "(I)I";
  const utf8 a_name "a";
  const utf8 a_desc "I";
  const utf8 StackMapTable_utf8 "StackMapTable";
  const utf8 SourceFile_utf8 "SourceFile";
  const utf8 source_file_name "StackmapProber.java";
  source file source_file_name; // StackmapProber.java
   //Fields
   //Methods
  public method {
    name init0_name; // <init>
    descriptor init0_desc; // ()V
    line numbers {
      line ir0, 3;
    }
    debug vars {
      var this, ir0, this_name, this_desc; // name=this,  descriptor=Lorg/jasm/test/playground/StackmapProber;
    }
    maxstack 1;
    maxlocals 1;
    //Variables
    var object this;
    //Instructions
    ir0: aload this;
    invokespecial init0; // class=java/lang/Object, name=<init>, descriptor=()V
    return;
  }
  public method {
    name check_name; // check
    descriptor check_desc; // (I)I
    /*stackmap {
      same ir7;
    }*/
    maxstack 2;
    maxlocals 2;
    //Variables
    var object this;
    var int a;
    //Instructions
    ir0: iload a;
    iconst_1;
    if_icmple ir7;
    iconst_1;
    ireturn;
    ir7: iconst_m1;
    ireturn;
  }
}