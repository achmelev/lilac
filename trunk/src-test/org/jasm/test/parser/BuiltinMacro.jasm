public class {
	const classref java/lang/Object;
	const classref org/jasm/test/testclass/BuiltinMacros;
	const classref org/jasm/test/testclass/BuiltinMacros;
	const methodref void <init>() from Object as Object.init; 
	const classref java/lang/String;
	const classref org/jasm/test/testclass/IBuiltinMacros;
	const string mystring "MyString";
	const classref java/lang/Boolean;
	const classref java/lang/Integer;
	const fieldref Boolean BoolField from BuiltinMacros;
	
	version 52.0;
	name BuiltinMacros;
	extends Object;
	implements IBuiltinMacros;
	
	private static byte byteField;
	private boolean boolField;
	private static char charField;
	private short shortField;
	
	private Boolean BoolField;
	
	
	public void <init>() {
		aload this;
		invokespecial Object.init;
		return;
	}
	
	public String concat(String prefix, byte arg1, boolean arg2, char arg3, double arg4, float arg5, int arg6, long arg7, short arg8) {
		.concat(prefix, " ",this,": ", (byte)arg1, ", ", (boolean)arg2, ", ", (char)arg3, ", ", arg4, ", ", arg5, ", ", arg6, ", ", arg7, ", ", (short)arg8);
		areturn;
	}
	
	/* PRIMITIVE CASTS */ 
	
	//byte, boolean, char,double, float, int, long, short
	
	public byte pconvert1(boolean p) {
		.putfield(this, boolField, p);
		test.return((byte).getfield(this, boolField));
	}
	
	public byte pconvert2(char p) {
		.putfield(charField,p);
		test.return((byte).getfield(charField));
	}
	
	public byte pconvert3(double p) {
		test.return((byte)p);
	}
	
	public byte pconvert4(float p) {
		test.return((byte)p);
	}
	
	public byte pconvert5(int p) {
		test.return((byte)p);
	}
	
	public byte pconvert6(long p) {
		test.return((byte)p);
	}
	
	public byte pconvert7(short p) {
		.putfield(this, shortField,p);
		test.return((byte).getfield(this, shortField));
	}
	
	public boolean pconvert8(byte p) {
		.putfield(byteField, p);
		test.return((boolean).getfield(byteField));
	}
	
	public boolean pconvert9(char p) {
		.putfield(charField, p);
		test.return((boolean).getfield(charField));
	}
	
	public boolean pconvert10(double p) {
		test.return((boolean)p);
	}
	
	public boolean pconvert11(float p) {
		test.return((boolean)p);
	}
	
	public boolean pconvert12(int p) {
		test.return((boolean)p);
	}
	
	public boolean pconvert13(long p) {
		test.return((boolean)p);
	}
	
	public boolean pconvert14(short p) {
		.putfield(this, shortField, p);
		test.return((boolean).getfield(this, shortField));
	}
	
	public char pconvert15(byte p) {
		.putfield(byteField, p);
		test.return((char).getfield(byteField));
	}
	
	public char pconvert16(boolean p) {
		.putfield(this, boolField, p);
		test.return((char).getfield(this, boolField));
	}
	
	public char pconvert17(double p) {
		test.return((char)p);
	}
	
	public char pconvert18(float p) {
		test.return((char)p);
	}
	
	public char pconvert19(int p) {
		test.return((char)p);
	}
	
	public char pconvert20(long p) {
		test.return((char)p);
	}
	
	public char pconvert21(short p) {
		.putfield(this, shortField, p);
		test.return((char).getfield(this, shortField));
	}
	
	public double pconvert22(byte p) {
		.putfield(byteField, p);
		test.return((double).getfield(byteField));
	}
	
	public double pconvert23(boolean p) {
		.putfield(this, boolField, p);
		test.return((double).getfield(this, boolField));
	}
	
	public double pconvert24(char p) {
		.putfield(charField, p);
		test.return((double).getfield(charField));
	}
	
	public double pconvert25(float p) {
		test.return((double)p);
	}
	
	public double pconvert26(int p) {
		test.return((double)p);
	}
	
	public double pconvert27(long p) {
		test.return((double)p);
	}
	
	public double pconvert28(short p) {
		.putfield(this, shortField, p);
		test.return((double).getfield(this, shortField));
	}
	
	public float pconvert29(byte p) {
		.putfield(byteField, p);
		test.return((float).getfield(byteField));
	}
	
	public float pconvert30(boolean p) {
		.putfield(this, boolField, p);
		test.return((float).getfield(this, boolField));
	}
	
	public float pconvert31(char p) {
		.putfield(charField, p);
		test.return((float).getfield(charField));
	}
	
	public float pconvert32(double p) {
		test.return((float)p);
	}
	
	public float pconvert33(int p) {
		test.return((float)p);
	}
	
	public float pconvert34(long p) {
		test.return((float)p);
	}
	
	public float pconvert35(short p) {
		.putfield(this, shortField, p);
		test.return((float).getfield(this, shortField));
	}
	
	public int pconvert36(byte p) {
		.putfield(byteField, p);
		test.return((int).getfield(byteField));
	}
	
	public int pconvert37(boolean p) {
		.putfield(this, boolField, p);
		test.return((int).getfield(this, boolField));
	}
	
	public int pconvert38(char p) {
		.putfield(charField, p);
		test.return((int).getfield(charField));
	}
	
	public int pconvert39(double p) {
		test.return((int)p);
	}
	
	public int pconvert40(float p) {
		test.return((int)p);
	}
	
	public int pconvert41(long p) {
		test.return((int)p);
	}
	
	public int pconvert42(short p) {
		.putfield(this, shortField, p);
		test.return((int).getfield(this, shortField));
	}
	
	public long pconvert43(byte p) {
		.putfield(byteField, p);
		test.return((long).getfield(byteField));
	}
	
	public long pconvert44(boolean p) {
		.putfield(this, boolField, p);
		test.return((long).getfield(this, boolField));
	}
	
	public long pconvert45(char p) {
		.putfield(charField, p);
		test.return((long).getfield(charField));
	}
	
	public long pconvert46(double p) {
		test.return((long)p);
	}
	
	public long pconvert47(float p) {
		test.return((long)p);
	}
	
	public long pconvert48(int p) {
		test.return((long)p);
	}
	
	public long pconvert49(short p) {
		.putfield(this,shortField, p);
		test.return((long).getfield(this,shortField));
	}
	
	public short pconvert50(byte p) {
		.putfield(byteField, p);
		test.return((short).getfield(byteField));
	}
	
	public short pconvert51(boolean p) {
		.putfield(this,boolField, p);
		test.return((short).getfield(this,boolField));
	}
	
	public short pconvert52(char p) {
		.putfield(charField, p);
		test.return((short).getfield(charField));
	}
	
	public short pconvert53(double p) {
		test.return((short)p);
	}
	
	public short pconvert54(float p) {
		test.return((short)p);
	}
	
	public short pconvert55(int p) {
		test.return((short)p);
	}
	
	public short pconvert56(long p) {
		test.return((short)p);
	}
	
	public Boolean box(boolean a) {
		test.return((Boolean)a);
	}
	
	public Integer boxZ2I(boolean a) {
		test.return((Integer)a);
	}
	
	public boolean unbox(Boolean a) {
		test.return((boolean)a);
	}
	
	public int unboxZ2I(Boolean a) {
		.putfield(this,BuiltinMacros.BoolField,a);
		test.return((int).getfield(this, BuiltinMacros.BoolField));
	}
	
	
	public String toString(){
		ldc mystring;
		areturn;
	}
	
}